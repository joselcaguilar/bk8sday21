trigger:
- develop
- main
- publish

pool:
  vmImage: ubuntu-latest

variables:
  imageName: python
  trivyVersion: 0.20.1

stages:
- stage: Build
  displayName: Build, Scan and Push image
  jobs:
  - job: Build
    displayName: Build, Scan and Push
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self

    - task: CmdLine@2
      displayName: Build the Python v3.4 image
      inputs:
        workingDirectory: $(Build.SourcesDirectory)/dockerFiles
        script: |
            docker build -t $(imageName):3.4-$(Build.BuildNumber) -f dockerFileOld .

    - task: CmdLine@2
      displayName: Build the latest Python image
      inputs:
        workingDirectory: $(Build.SourcesDirectory)/dockerFiles
        script: |
            docker build -t $(imageName):latest-$(Build.BuildNumber) -f dockerFile .

    - task: CmdLine@2
      displayName: "Run trivy scan for Python 3.4 image"
      inputs:
        script: |
            docker run \
            --rm -v /var/run/docker.sock:/var/run/docker.sock ghcr.io/aquasecurity/trivy:$(trivyVersion) \
            --severity low,medium,high,CRITICAL \
            --format template \
            --template "@templates/junit.tpl" \
            -o "$(Build.SourcesDirectory)/dockerFiles/junit-report-PythonOld.xml" image $(imageName):3.4-$(Build.BuildNumber)

    - task: CmdLine@2
      displayName: "Run trivy scan for latest Python image"
      inputs:
        script: |
            docker run \
            --rm -v /var/run/docker.sock:/var/run/docker.sock ghcr.io/aquasecurity/trivy:$(trivyVersion) \
            --severity low,medium,high,CRITICAL \
            --format template \
            --template "$(Build.SourcesDirectory)/junit.tpl" \
            -o "$(Build.SourcesDirectory)/dockerFiles/junit-report-PythonLatest.xml" image $(imageName):latest-$(Build.BuildNumber)
            write-host "######### Trivy scan for latest Python image is completed #########"
            pwd

    - task: PublishTestResults@2
      displayName: "Publish tests from the Python v3.4 image"
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: "$(Build.SourcesDirectory)/dockerFiles/junit-report-PythonOld.xml"
        mergeTestResults: true
        failTaskOnFailedTests: false
        testRunTitle: 'Trivy - Old Python image Vulnerabilities'
      condition: 'always()'

    - task: PublishTestResults@2
      displayName: "Publish tests from the latest Python image"
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: "$(Build.SourcesDirectory)/dockerFiles/junit-report-PythonLatest.xml"
        mergeTestResults: true
        failTaskOnFailedTests: true
        testRunTitle: 'Trivy - Latest Python image  Vulnerabilities'
      condition: 'always()'

    - task: CmdLine@2
      displayName: Scan the Python latest image with Snyk
      inputs:
        workingDirectory: $(Build.SourcesDirectory)/dockerFiles
        script: |
            wget https://github.com/docker/scan-cli-plugin/releases/download/v0.8.0/docker-scan_linux_amd64
            chmod +x docker-scan_linux_amd64
            ./docker-scan_linux_amd64 scan --login --token 'b7191e9b-e40a-431e-a71b-3d79d99a324c'  --accept-license
            ./docker-scan_linux_amd64 scan $(imageName):latest-$(Build.BuildNumber) --accept-license

    - task: CmdLine@2
      displayName: Scan the Python v3.4 image with Snyk
      inputs:
        workingDirectory: $(Build.SourcesDirectory)/dockerFiles
        script: |
            wget https://github.com/docker/scan-cli-plugin/releases/download/v0.8.0/docker-scan_linux_amd64
            chmod +x docker-scan_linux_amd64
            ./docker-scan_linux_amd64 scan --login --token 'b7191e9b-e40a-431e-a71b-3d79d99a324c'  --accept-license
            ./docker-scan_linux_amd64 scan $(imageName):3.4-$(Build.BuildNumber) --accept-license
