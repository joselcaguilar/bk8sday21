trigger:
- develop
- main
- publish

pool:
  vmImage: ubuntu-latest

variables:
  imageName: python
  trivyVersion: 0.20.1

stages:
- stage: Build
  displayName: Build, Scan and Push image
  jobs:
  - job: Build
    displayName: Build, Scan and Push
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self

    - task: CmdLine@2
      displayName: Build the Python v3.4 image
      inputs:
        workingDirectory: $(Build.SourcesDirectory)/dockerFiles
        script: |
            docker build -t $(imageName):3.4-$(Build.BuildNumber) -f dockerFileOld .

    - task: CmdLine@2
      displayName: Build the latest Python image
      inputs:
        workingDirectory: $(Build.SourcesDirectory)/dockerFiles
        script: |
            docker build -t $(imageName):latest-$(Build.BuildNumber) -f dockerFile .

    - task: CmdLine@2
      displayName: "Run trivy scan for Python 3.4 image"
      inputs:
        workingDirectory: $(Build.SourcesDirectory)
        script: |
            docker run \
            --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME:/root/.cache/ -v $(Build.SourcesDirectory):/root/ ghcr.io/aquasecurity/trivy:$(trivyVersion) \
            --severity LOW,MEDIUM,HIGH,CRITICAL \
            --format template \
            --template "@contrib/junit.tpl" \
            -o "/root/junit-report-PythonOld.xml" \
            $(imageName):3.4-$(Build.BuildNumber)

            echo "##[debug] Showing the output in plain text"

            docker run \
            --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME:/root/.cache/ ghcr.io/aquasecurity/trivy:$(trivyVersion) \
            --severity LOW,MEDIUM,HIGH,CRITICAL \
            $(imageName):3.4-$(Build.BuildNumber)

    - task: CmdLine@2
      displayName: "Run trivy scan for latest Python image"
      inputs:
        workingDirectory: $(Build.SourcesDirectory)
        script: |
            docker run \
            --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME:/root/.cache/ -v $(Build.SourcesDirectory):/root/ ghcr.io/aquasecurity/trivy:$(trivyVersion) \
            --severity LOW,MEDIUM,HIGH,CRITICAL \
            --format template \
            --template "@contrib/junit.tpl" \
            -o "/root/junit-report-PythonLatest.xml" \
            $(imageName):latest-$(Build.BuildNumber)

            echo "##[debug] Showing the output in plain text"

            docker run \
            --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME:/root/.cache/ ghcr.io/aquasecurity/trivy:$(trivyVersion) \
            --severity LOW,MEDIUM,HIGH,CRITICAL \
            $(imageName):latest-$(Build.BuildNumber)

    - task: PublishTestResults@2
      displayName: "Publish tests from the Python v3.4 image"
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: "$(Build.SourcesDirectory)/junit-report-PythonOld.xml"
        mergeTestResults: false
        failTaskOnFailedTests: true
        testRunTitle: 'Trivy - Old Python image Vulnerabilities'

    - task: PublishTestResults@2
      displayName: "Publish tests from the latest Python image"
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: "$(Build.SourcesDirectory)/junit-report-PythonLatest.xml"
        mergeTestResults: false
        failTaskOnFailedTests: true
        testRunTitle: 'Trivy - Latest Python image  Vulnerabilities'
      condition: 'always()'
