trigger:
- develop
- main

pool:
  vmImage: ubuntu-latest

variables:
  imageName: python
  trivyVersion: 0.20.1

stages:
- stage: Build
  displayName: Build, Scan and Push image
  jobs:
  - job: Build
    displayName: Build, Scan and Push
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self

    - task: CmdLine@2
      displayName: Build the Python v3.4 image
      inputs:
        workingDirectory: $(Build.SourcesDirectory)/dockerFiles
        script: |
            docker build -t $(imageName):3.4-$(Build.BuildNumber) -f dockerFileOld .

    - task: CmdLine@2
      displayName: Build the latest Python image
      inputs:
        workingDirectory: $(Build.SourcesDirectory)/dockerFiles
        script: |
            docker build -t $(imageName):latest-$(Build.BuildNumber) -f dockerFile .

    - task: SnykSecurityScan@1
      displayName: Scan the Python v3.4 image with Snyk
      inputs:
        serviceConnectionEndpoint: 'Snyk-josunefon'
        testType: 'container'
        dockerImageName: $(imageName):3.4-$(Build.BuildNumber)
        severityThreshold: 'medium'
        monitorWhen: 'always'
        failOnIssues: false

    - task: CmdLine@2
      displayName: Scan the Python v3.4 image with Snyk
      inputs:
        workingDirectory: $(Build.SourcesDirectory)/dockerFiles
        script: |
            wget https://github.com/docker/scan-cli-plugin/releases/download/v0.8.0/docker-scan_linux_amd64
            chmod +x docker-scan_linux_amd64
            ./docker-scan_linux_amd64 scan --login --token $(SNYK_API_TOKEN) --accept-license
            ./docker-scan_linux_amd64 scan $(imageName):3.4-$(Build.BuildNumber) --accept-license || exit 0

    - task: CmdLine@2
      displayName: Scan the Python latest image with Snyk
      inputs:
        workingDirectory: $(Build.SourcesDirectory)/dockerFiles
        script: |
            wget https://github.com/docker/scan-cli-plugin/releases/download/v0.8.0/docker-scan_linux_amd64
            chmod +x docker-scan_linux_amd64
            ./docker-scan_linux_amd64 scan --login --token $(SNYK_API_TOKEN) --accept-license
            ./docker-scan_linux_amd64 scan $(imageName):latest-$(Build.BuildNumber) --accept-license || exit 0