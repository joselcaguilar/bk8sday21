trigger:
- develop
- main

pool:
  vmImage: ubuntu-latest

variables:
  imageName: python
  trivyVersion: 0.20.1

stages:
- stage: Build
  displayName: Build, Scan and Push image
  jobs:
  - job: Build
    displayName: Build, Scan and Push
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self

    - task: CmdLine@2
      displayName: Build the Python v3.4 image
      inputs:
        workingDirectory: $(Build.SourcesDirectory)/dockerFiles
        script: |
            docker build -t $(imageName):3.4-$(Build.BuildNumber) -f dockerFileOld .

    - task: SnykSecurityScan@1
      displayName: Scan the Python v3.4 image with Snyk
      inputs:
        serviceConnectionEndpoint: 'SnykAPIConnection'
        testType: 'container'
        dockerImageName: $(imageName):3.4-$(Build.BuildNumber)
        severityThreshold: 'medium'
        monitorWhen: 'never'
        additionalArguments: --json-file-output=$(Build.SourcesDirectory)/json-SnykReport-PythonOld.json
        failOnIssues: false

    - task: CmdLine@2
      displayName: Build the latest Python image
      inputs:
        workingDirectory: $(Build.SourcesDirectory)/dockerFiles
        script: |
            docker build -t $(imageName):latest-$(Build.BuildNumber) -f dockerFile .

    - task: SnykSecurityScan@1
      displayName: Scan the latest Python image with Snyk
      inputs:
        serviceConnectionEndpoint: 'SnykAPIConnection'
        testType: 'container'
        dockerImageName: $(imageName):latest-$(Build.BuildNumber)
        severityThreshold: 'medium'
        monitorWhen: 'never'
        additionalArguments: --json-file-output=$(Build.SourcesDirectory)/json-SnykReport-PythonLatest.json
        failOnIssues: false

    - task: CmdLine@2
      displayName: Transform both tests to JUnit format
      inputs:
        workingDirectory: $(Build.SourcesDirectory)
        script: |
            npm install --save-dev json-to-junit@latest
            node_modules/.bin/jsonjunit --json $(Build.SourcesDirectory)/json-SnykReport-PythonOld.json --junit $(Build.SourcesDirectory)/junit-SnykReport-PythonOld.xml
            node_modules/.bin/jsonjunit --json $(Build.SourcesDirectory)/json-SnykReport-PythonLatest.json --junit $(Build.SourcesDirectory)/junit-SnykReport-PythonLatest.xml

    - task: PublishTestResults@2
      displayName: "Publish tests from the Python v3.4 image"
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: "$(Build.SourcesDirectory)/junit-SnykReport-PythonOld.xml"
        mergeTestResults: false
        failTaskOnFailedTests: true
        testRunTitle: 'Snyk - Old Python image Vulnerabilities'

    - task: PublishTestResults@2
      displayName: "Publish tests from the Python v3.4 image"
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: "$(Build.SourcesDirectory)/junit-SnykReport-PythonLatest.xml"
        mergeTestResults: false
        failTaskOnFailedTests: true
        testRunTitle: 'Snyk - Latest Python image Vulnerabilities'